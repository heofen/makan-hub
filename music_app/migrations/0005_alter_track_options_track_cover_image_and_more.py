# Generated by Django 5.2 on 2025-04-26 19:42

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('music_app', '0004_alter_track_options_track_genre_track_lyrics_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='track',
            options={'ordering': ['album', 'track_number', 'title'], 'verbose_name': 'Трек', 'verbose_name_plural': 'Треки'},
        ),
        migrations.AddField(
            model_name='track',
            name='cover_image',
            field=models.ImageField(blank=True, help_text='Обложка трека (если отличается от обложки альбома)', null=True, upload_to='tracks/covers/'),
        ),
        migrations.AddField(
            model_name='track',
            name='is_explicit',
            field=models.BooleanField(default=False, help_text='Содержит ли трек ненормативный контент'),
        ),
        migrations.AddField(
            model_name='track',
            name='is_featured',
            field=models.BooleanField(default=False, help_text='Отмечен ли трек как хит'),
        ),
        migrations.AddField(
            model_name='track',
            name='track_number',
            field=models.PositiveIntegerField(default=1, help_text='Номер трека в альбоме'),
        ),
        migrations.AlterField(
            model_name='track',
            name='album',
            field=models.ForeignKey(help_text='Альбом, к которому принадлежит трек', on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='music_app.album'),
        ),
        migrations.AlterField(
            model_name='track',
            name='artist',
            field=models.ForeignKey(help_text='Исполнитель трека', on_delete=django.db.models.deletion.CASCADE, related_name='tracks', to='music_app.artist'),
        ),
        migrations.AlterField(
            model_name='track',
            name='audio_file',
            field=models.FileField(help_text='Аудиофайл трека', upload_to='tracks/'),
        ),
        migrations.AlterField(
            model_name='track',
            name='duration',
            field=models.DurationField(blank=True, help_text='Длительность трека', null=True),
        ),
        migrations.AlterField(
            model_name='track',
            name='title',
            field=models.CharField(help_text='Название трека', max_length=200),
        ),
        migrations.AlterUniqueTogether(
            name='track',
            unique_together={('album', 'track_number')},
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Название плейлиста', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания плейлиста')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления плейлиста')),
                ('public_slug', models.SlugField(help_text='Уникальная публичная ссылка на плейлист', max_length=200, unique=True)),
                ('description', models.TextField(blank=True, help_text='Описание плейлиста')),
                ('is_public', models.BooleanField(default=True, help_text='Публичный ли плейлист')),
                ('cover_image', models.ImageField(blank=True, help_text='Обложка плейлиста', null=True, upload_to='playlists/covers/')),
                ('owner', models.ForeignKey(help_text='Владелец плейлиста', on_delete=django.db.models.deletion.CASCADE, related_name='playlists', to=settings.AUTH_USER_MODEL)),
                ('tracks', models.ManyToManyField(help_text='Треки в плейлисте', related_name='playlists', to='music_app.track')),
            ],
            options={
                'verbose_name': 'Плейлист',
                'verbose_name_plural': 'Плейлисты',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['owner'], name='music_app_p_owner_i_370ed2_idx'), models.Index(fields=['public_slug'], name='music_app_p_public__6604bc_idx'), models.Index(fields=['is_public'], name='music_app_p_is_publ_f2709a_idx')],
            },
        ),
        migrations.CreateModel(
            name='TrackPlay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played_at', models.DateTimeField(auto_now_add=True, help_text='Дата и время прослушивания')),
                ('play_duration', models.PositiveIntegerField(default=0, help_text='Длительность прослушивания в секундах')),
                ('completed', models.BooleanField(default=False, help_text='Был ли трек прослушан полностью')),
                ('track', models.ForeignKey(help_text='Прослушанный трек', on_delete=django.db.models.deletion.CASCADE, related_name='plays', to='music_app.track')),
                ('user', models.ForeignKey(help_text='Пользователь, прослушавший трек', on_delete=django.db.models.deletion.CASCADE, related_name='track_plays', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Прослушивание трека',
                'verbose_name_plural': 'Прослушивания треков',
                'ordering': ['-played_at'],
                'indexes': [models.Index(fields=['user', 'played_at'], name='music_app_t_user_id_f5e40c_idx'), models.Index(fields=['track', 'played_at'], name='music_app_t_track_i_a7700f_idx')],
            },
        ),
    ]
